Microchip MPLAB XC8 Compiler V1.12 ()

Linker command line:

--edf=/opt/microchip/xc8/v1.12/dat/en_msgs.txt -cs \
  -h+dist/default/production/Wulfgar.X.production.sym -z -Q16F886 -ol.obj \
  -Mdist/default/production/Wulfgar.X.production.map -E1 -ver=XC8 \
  -ACONST=00h-0FFhx32 -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -AENTRY=00h-0FFhx32 -ASTRING=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pfunctab=CODE \
  -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 -AIDLOC=02000h-02003h \
  -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA \
  -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  /tmp/cgtcVIOR8.obj dist/default/production/Wulfgar.X.production.obj 

Object code version is 3.10

Machine type is 16F886



                Name                               Link     Load   Length Selector   Space Scale
/tmp/cgtcVIOR8.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                idloc                              2000     2000        4     4000       0
                config                             2007     2007        2     400E       0
dist/default/production/Wulfgar.X.production.obj
                intentry                              4        4        E        8       0
                text232                              FC       FC       1D        8       0
                text231                             12B      12B        F        8       0
                text230                              DE       DE       1E        8       0
                text229                              BF       BF       1F        8       0
                text228                              15       15       51        8       0
                text227                             119      119       12        8       0
                text226                              66       66       32        8       0
                text225                             145      145        A        8       0
                maintext                             98       98       27        8       0
                cstackBANK0                          20       20        6       20       1
                cstackCOMMON                         70       70        7       70       1
                dataBANK0                            26       26        1       20       1
                cinit                               13A      13A        B        8       0
                idataBANK0                          14F      14F        1        8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   CONST          

        CLASS   CODE           
                end_init                             12       12        3         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text232                              FC       FC       1D         0
                text231                             12B      12B        F         0
                text230                              DE       DE       1E         0
                text229                              BF       BF       1F         0
                text228                              15       15       51         0
                text227                             119      119       12         0
                text226                              66       66       32         0
                text225                             145      145        A         0
                maintext                             98       98       27         0
                cinit                               13A      13A        B         0
                idataBANK0                          14F      14F        1         0

        CLASS   STRCODE        

        CLASS   ENTRY          

        CLASS   STRING         

        CLASS   COMMON         
                cstackCOMMON                         70       70        7         1

        CLASS   BANK0          
                cstackBANK0                          20       20        6         1
                dataBANK0                            26       26        1         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          
                idloc                              2000     2000        4         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00014C  000150         8       0  CODE        2
                cstackBANK0                    000020  000007  000027        20       1  BANK0       1
                cstackCOMMON                   000070  000007  000077        70       1  COMMON      1
                idloc                          002000  000004  002004      4000       0  IDLOC       2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0027-006F             49           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0150-1FFF            800
        COMMON           0077-007D              7           1
        CONST            0003-0003              1           2
                         0150-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0150-1FFF            100
        RAM              0027-006F             49           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STRCODE          0003-0003              1           2
                         0150-1FFF           1EB0
        STRING           0003-0003              1           2
                         0150-1FFF            100

                                  Symbol Table

?_USART_Init                 cstackBANK0  0020
USART_Init@receiveInterupts  cstackBANK0  0020
_ANSEL                       (abs)        0188
_ANSELH                      (abs)        0189
_BRG16                       (abs)        0C3B
_BRGH                        (abs)        04C2
_CCP1CON                     (abs)        0017
_CCP2CON                     (abs)        001D
_CCPR1L                      (abs)        0015
_CCPR2L                      (abs)        001B
_CREN                        (abs)        00C4
_FERR                        (abs)        00C2
_GIE                         (abs)        005F
_INTE                        (abs)        005C
_OERR                        (abs)        00C1
_PEIE                        (abs)        005E
_PR2                         (abs)        0092
_RA0                         (abs)        0028
_RA1                         (abs)        0029
_RA2                         (abs)        002A
_RA3                         (abs)        002B
_RB5                         (abs)        0035
_RCIE                        (abs)        0465
_RCIF                        (abs)        0065
_RCREG                       (abs)        001A
_RX9                         (abs)        00C6
_SPBRG                       (abs)        0099
_SPBRGH                      (abs)        009A
_SPEN                        (abs)        00C7
_SYNC                        (abs)        04C4
_Set_SPBRG                   text228      0015
_T2CON                       (abs)        0012
_TMR2IE                      (abs)        0461
_TMR2IF                      (abs)        0061
_TRISA0                      (abs)        0428
_TRISA1                      (abs)        0429
_TRISA2                      (abs)        042A
_TRISA3                      (abs)        042B
_TRISB5                      (abs)        0435
_TRISC1                      (abs)        0439
_TRISC2                      (abs)        043A
_TRISC6                      (abs)        043E
_TRISC7                      (abs)        043F
_TX9                         (abs)        04C6
_TXEN                        (abs)        04C5
_TXIE                        (abs)        0464
_TXIF                        (abs)        0064
_TXREG                       (abs)        0019
_USART_Init                  text226      0066
__CFG_BOR4V$BOR21V           (abs)        0000
__CFG_BOREN$OFF              (abs)        0000
__CFG_FCMEN$OFF              (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT    (abs)        0000
__CFG_IESO$OFF               (abs)        0000
__CFG_LVP$OFF                (abs)        0000
__CFG_WDTE$OFF               (abs)        0000
__Habs1                      abs1         0000
__Hbank0                     bank0        0000
__Hbank1                     bank1        0000
__Hbank2                     bank2        0000
__Hbank3                     bank3        0000
__Hcinit                     cinit        0000
__Hclrtext                   clrtext      0000
__Hcode                      code         0000
__Hcommon                    common       0000
__Hconfig                    config       2009
__HcstackBANK0               cstackBANK0  0000
__HcstackCOMMON              cstackCOMMON 0000
__HdataBANK0                 dataBANK0    0000
__Heeprom_data               eeprom_data  0000
__Hend_init                  end_init     0015
__Hfunctab                   functab      0000
__HidataBANK0                idataBANK0   0000
__Hidloc                     idloc        2004
__Hinit                      init         0012
__Hintentry                  intentry     0012
__Hmaintext                  maintext     0000
__Hpowerup                   powerup      0000
__Hram                       ram          0000
__Hreset_vec                 reset_vec    0003
__Hsfr0                      sfr0         0000
__Hsfr1                      sfr1         0000
__Hsfr2                      sfr2         0000
__Hsfr3                      sfr3         0000
__Hstrings                   strings      0000
__Htext                      text         0000
__Labs1                      abs1         0000
__Lbank0                     bank0        0000
__Lbank1                     bank1        0000
__Lbank2                     bank2        0000
__Lbank3                     bank3        0000
__Lcinit                     cinit        0000
__Lclrtext                   clrtext      0000
__Lcode                      code         0000
__Lcommon                    common       0000
__Lconfig                    config       2007
__LcstackBANK0               cstackBANK0  0000
__LcstackCOMMON              cstackCOMMON 0000
__LdataBANK0                 dataBANK0    0000
__Leeprom_data               eeprom_data  0000
__Lend_init                  end_init     0012
__Lfunctab                   functab      0000
__LidataBANK0                idataBANK0   0000
__Lidloc                     idloc        2000
__Linit                      init         0012
__Lintentry                  intentry     0004
__Lmaintext                  maintext     0000
__Lpowerup                   powerup      0000
__Lram                       ram          0000
__Lreset_vec                 reset_vec    0000
__Lsfr0                      sfr0         0000
__Lsfr1                      sfr1         0000
__Lsfr2                      sfr2         0000
__Lsfr3                      sfr3         0000
__Lstrings                   strings      0000
__Ltext                      text         0000
__S0                         (abs)        2009
__S1                         (abs)        0077
__S2                         (abs)        0000
__end_of_Set_SPBRG           text228      0066
__end_of_USART_Init          text226      0098
__end_of__initialization     cinit        0141
__end_of_clear_usart_errors  text232      0119
__end_of_get_USART_char      text231      013A
__end_of_isr                 text230      00FC
__end_of_main                maintext     00BF
__end_of_motorInit           text227      012B
__end_of_picInit             text225      014F
__end_of_pwmInit             text229      00DE
__initialization             cinit        013A
__pcstackBANK0               cstackBANK0  0020
__pcstackCOMMON              cstackCOMMON 0070
__pdataBANK0                 dataBANK0    0026
__pidataBANK0                idataBANK0   014F
__pintentry                  intentry     0004
__pmaintext                  maintext     0098
__ptext225                   text225      0145
__ptext226                   text226      0066
__ptext227                   text227      0119
__ptext228                   text228      0015
__ptext229                   text229      00BF
__ptext230                   text230      00DE
__ptext231                   text231      012B
__ptext232                   text232      00FC
__ptext233                   text233      0000
__size_of_Set_SPBRG          (abs)        0000
__size_of_USART_Init         (abs)        0000
__size_of_clear_usart_errors (abs)        0000
__size_of_get_USART_char     (abs)        0000
__size_of_isr                (abs)        0000
__size_of_main               (abs)        0000
__size_of_motorInit          (abs)        0000
__size_of_picInit            (abs)        0000
__size_of_pwmInit            (abs)        0000
_clear_usart_errors          text232      00FC
_command                     dataBANK0    0026
_get_USART_char              text231      012B
_isr                         text230      00DE
_main                        maintext     0098
_motorInit                   text227      0119
_picInit                     text225      0145
_pwmInit                     text229      00BF
btemp                        (abs)        007E
clear_usart_errors@dummy     cstackCOMMON 0071
end_of_initialization        cinit        0141
interrupt_function           intentry     0004
intlevel0                    functab      0000
intlevel1                    functab      0000
intlevel2                    functab      0000
intlevel3                    functab      0000
intlevel4                    functab      0000
intlevel5                    functab      0000
reset_vec                    reset_vec    0000
saved_w                      (abs)        007E
start                        init         0012
start_initialization         cinit        013A
wtemp0                       (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 32 in file "main.c"
 Parameters:    Size  Location     Type
  argc            2    2[BANK0 ] int 
  argv            2    4[BANK0 ] PTR PTR unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    2[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_picInit
		_USART_Init
		_motorInit
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _picInit *****************
 Defined at:
		line 64 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _USART_Init *****************
 Defined at:
		line 20 in file "usart.c"
 Parameters:    Size  Location     Type
  receiveInter    2    0[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Set_SPBRG
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motorInit *****************
 Defined at:
		line 21 in file "motor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_pwmInit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Set_SPBRG *****************
 Defined at:
		line 83 in file "usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_USART_Init
 This function uses a non-reentrant model


 *************** function _pwmInit *****************
 Defined at:
		line 20 in file "pwm.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_motorInit
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 16 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          5       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_get_USART_char
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _get_USART_char *****************
 Defined at:
		line 110 in file "usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_clear_usart_errors
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _clear_usart_errors *****************
 Defined at:
		line 160 in file "usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  dummy           1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_USART_char
		_get_USART_char_timeout
		_send_USART_char
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
pwm.c
		_pwmInit       		CODE           	00BF	0000	31

pwm.c estimated size: 31

motor.c
		_motorInit     		CODE           	0119	0000	18

motor.c estimated size: 18

shared
		__initializatio		CODE           	013A	0000	7

shared estimated size: 7

main.c
		_main          		CODE           	0098	0000	39
		_isr           		CODE           	00DE	0000	30
		_picInit       		CODE           	0145	0000	10

main.c estimated size: 79

usart.c
		_Set_SPBRG     		CODE           	0015	0000	81
		_get_USART_char		CODE           	012B	0000	15
		_clear_usart_er		CODE           	00FC	0000	29
		_USART_Init    		CODE           	0066	0000	50

usart.c estimated size: 175

